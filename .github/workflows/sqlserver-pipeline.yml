name: Automate AutoTest Database Creation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Start SQL Server Container
        run: |
          docker run -e "ACCEPT_EULA=Y" -e "SQL_SERVER_PASSWORD=${{ secrets.SQL_SERVER_PASSWORD }}" \
            -p 1433:1433 --name sql_server -d mcr.microsoft.com/mssql/server:2019-latest

      - name: Wait for SQL Server
        run: |
          sleep 10
          for i in {1..30}; do
            docker exec sql_server /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -Q "SELECT 1" && break
            sleep 2
          done

      - name: Install Pinggy and Expose SQL Server
        run: |
          # Download the install script and save it to a file
          curl -sSL https://pinggy.io/downloads/install.sh -o install.sh
          
          # Debug: Output the first few lines to check content
          echo "Debug: First few lines of install.sh"
          head -n 5 install.sh
          
          # Check if the file looks like a Bash script
          if grep -q "#!/bin/bash" install.sh || grep -q "#!/bin/sh" install.sh; then
            echo "Install script looks valid, proceeding..."
            chmod +x install.sh
            ./install.sh
          else
            echo "Error: Downloaded file is not a valid Bash script. Check the URL or server response."
            cat install.sh
            exit 1
          fi
          
          # Run Pinggy to expose SQL Server
          ./pinggy -p 1433 > pinggy_output.txt 2>&1 &
          sleep 5
          PINGGY_URL=$(grep -oP 'tcp://[a-z0-9-]+\.a\.free\.pinggy\.link:[0-9]+' pinggy_output.txt || echo "Failed to extract URL")
          echo "SQL Server exposed at: $PINGGY_URL"

      - name: Install sqlcmd
        run: |
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Setup Database and User
        env:
          SQL_SERVER_USER: ${{ secrets.SQL_SERVER_USER }}
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -i setup.sql

      - name: Create and Run Stored Procedure
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -i stored_procedure.sql

      - name: Test Connection (Optional)
        run: |
          PINGGY_URL=$(grep -oP 'tcp://[a-z0-9-]+\.a\.free\.pinggy\.link:[0-9]+' pinggy_output.txt || echo "Failed to extract URL")
          echo "You can connect to SQL Server at: $PINGGY_URL"
          sleep 30
