name: Automate AutoTest Database Creation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Start SQL Server Container
        run: |
          docker run -e "ACCEPT_EULA=Y" -e "SQL_SERVER_PASSWORD=${{ secrets.SQL_SERVER_PASSWORD}}" \
            -p 1433:1433 --name sql_server -d mcr.microsoft.com/mssql/server:2019-latest

      - name: Wait for SQL Server
        run: |
          sleep 10
          for i in {1..30}; do
            docker exec sql_server /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -Q "SELECT 1" && break
            sleep 2
          done

      - name: Install Pinggy and Expose SQL Server
        run: |
          # Download a specific Pinggy binary for Linux
          curl -sSL https://s3.ap-south-1.amazonaws.com/public.pinggy.binaries/v0.1.3/linux/x64/pinggy -o pinggy
          
          # Verify download (optional debug)
          echo "Debug: Checking downloaded file"
          file pinggy
          
          # Make it executable
          chmod +x pinggy
          
          # Run Pinggy to expose SQL Server
          ./pinggy -p 1433 > pinggy_output.txt 2>&1 &
          sleep 5
          PINGGY_URL=$(grep -oP 'tcp://[a-z0-9-]+\.a\.free\.pinggy\.link:[0-9]+' pinggy_output.txt || echo "Failed to extract URL")
          echo "SQL Server exposed at: $PINGGY_URL"

      - name: Install sqlcmd
        run: |
          where sqlcmd || (
            echo "Installing sqlcmd..."
            curl -o msodbcsql.msi https://go.microsoft.com/fwlink/?linkid=2230310
            msiexec /i msodbcsql.msi /quiet /qn /norestart IACCEPTMSODBCSSQLLICENSETERMS=YES
            set "PATH=%PATH%;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn"
          )
        

      - name: Setup Database and User
        env:
          SQL_SERVER_USER: ${{ secrets.SQL_SERVER_USER }}
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -i setup.sql

      - name: Create and Run Stored Procedure
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -i stored_procedure.sql

      - name: Test Connection (Optional)
        run: |
          PINGGY_URL=$(grep -oP 'tcp://[a-z0-9-]+\.a\.free\.pinggy\.link:[0-9]+' pinggy_output.txt || echo "Failed to extract URL")
          echo "You can connect to SQL Server at: $PINGGY_URL"
          sleep 30
